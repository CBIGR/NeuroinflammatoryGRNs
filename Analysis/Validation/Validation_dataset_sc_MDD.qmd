---
title: "Additional dataset MDD"
author: "Hanne Puype"
date: "2024-04-05"
format: html
editor: visual
toc: true
df-print: paged
---

# Load packages

```{r}
#| label: load-packages
library(tidyverse)
library(Seurat)
library(biomaRt)
```

# MDD single-cell data

<https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE213982>

## Load data
```{r}
expression_matrix <- ReadMtx(
  mtx = "Extra_data/GSE213982/matrix.mtx.gz", features = "Extra_data/GSE213982/features.tsv.gz",
  cells = "Extra_data/GSE213982/barcodes.tsv.gz", feature.column = 1, skip.cell = 1,
  skip.feature = 1)
MDD_data <- CreateSeuratObject(counts = expression_matrix, project = "MDD_data", min.cells = 3, min.features = 200)
MDD_data
rm(expression_matrix)
```

## Add metadata to seuratobj

```{r}
head(colnames(MDD_data))
metadata_MDD <- colnames(MDD_data)
metadata_MDD <- as.data.frame(metadata_MDD)
metadata_MDD[, 2:5] <- metadata_MDD$metadata_MDD %>% str_split_fixed("\\.", n = 4)
colnames(metadata_MDD) <- c("Full_name", "Sample", "Barcode", "Celltype", "Cluster")
table(metadata_MDD$Celltype)
table(metadata_MDD$Sample)
```

```{r}
MDD_data$Sample <- metadata_MDD$Sample
MDD_data$Celltype <- metadata_MDD$Celltype
```

Subset for female patients with F in sample name

```{r}
MDD_female <- subset(MDD_data, subset = Sample %in% unique(grep("F", MDD_data$Sample, value = T)))
table(MDD_female$Sample)
```

## QC and subsetting

```{r}
print(c("median of nCount_RNA", median(MDD_female@meta.data$nCount_RNA))) # UMI counts 2779
print(c("median of nFeature_RNA", median(MDD_female@meta.data$nFeature_RNA))) # gene counts 1636
hist(MDD_female$nCount_RNA)
hist(MDD_female$nFeature_RNA)
```

```{r}
VlnPlot(MDD_female, features = c("nFeature_RNA", "nCount_RNA"), ncol = 2, pt.size = FALSE) 
FeatureScatter(MDD_female, feature1 = "nCount_RNA", feature2 = "nFeature_RNA") 
```

```{r}
dim(MDD_female)
MDD_female <- subset(MDD_female, subset = nFeature_RNA > 500 &
                         nFeature_RNA < 10000 & nCount_RNA < 50000)
dim(MDD_female)
```

Select protein-coding genes

```{r}
mart <- useMart(biomart = "ENSEMBL_MART_ENSEMBL", dataset = "hsapiens_gene_ensembl", 
                host = 'https://www.ensembl.org')
genes_protcod <- biomaRt::getBM(attributes = c("hgnc_symbol", "ensembl_gene_id", "chromosome_name", 
                                               "transcript_biotype"), 
                                filters = c("transcript_biotype", "chromosome_name"),
                                values = list("protein_coding", c(1:22)), mart = mart)
head(genes_protcod)
hgnc_symbol <- genes_protcod$hgnc_symbol
```

```{r}
# put genes in vector
genes_MDD <- rownames(MDD_female)
head(genes_MDD)
# select protein-coding genes 
genes_MDD <- genes_MDD[genes_MDD %in% hgnc_symbol]
length(genes_MDD)
# subset
MDD_female <- subset(MDD_female, features = genes_MDD)
dim(MDD_female)
saveRDS(MDD_female, file = "Extra_data/Validation_Seurat_MDD_fem.rds")
MDD_female <- readRDS("Extra_data/Validation_Seurat_MDD_fem.rds")
```

## Normalize, highly variable features and scaling

```{r}
MDD_female <- NormalizeData(MDD_female)
MDD_female <- FindVariableFeatures(MDD_female, nfeatures = 3000)
MDD_female <- ScaleData(MDD_female)
```

Add diagnosis

```{r}
head(metadata_MDD)
metadata_MDD <- metadata_MDD %>% mutate(Diagnosis = case_when(Sample == "F1" ~ "Depression",
                                                                  Sample == "F2" ~ "Depression",
                                                                 Sample == "F3" ~ "Depression",
                                                                 Sample == "F4" ~ "Depression",
                                                                 Sample == "F5" ~ "Depression",
                                                                 Sample == "F6" ~ "Depression",
                                                                 Sample == "F7" ~ "Control",
                                                                 Sample == "F8" ~ "Depression",
                                                                 Sample == "F9" ~ "Depression",
                                                                 Sample == "F10" ~ "Control",
                                                                 Sample == "F11" ~ "Depression",
                                                                 Sample == "F12" ~ "Depression",
                                                                 Sample == "F13" ~ "Control",
                                                                 Sample == "F14" ~ "Depression",
                                                                 Sample == "F15" ~ "Depression",
                                                                 Sample == "F16" ~ "Depression",
                                                                 Sample == "F17" ~ "Depression",
                                                                 Sample == "F18" ~ "Depression",
                                                                 Sample == "F19" ~ "Depression",
                                                                 Sample == "F20" ~ "Depression",
                                                                 Sample == "F21" ~ "Control",
                                                                 Sample == "F22" ~ "Control",
                                                                 Sample == "F23" ~ "Control",
                                                                 Sample == "F24" ~ "Control",
                                                                 Sample == "F25" ~ "Depression",
                                                                 Sample == "F26" ~ "Control",
                                                                 Sample == "F27" ~ "Depression",
                                                                 Sample == "F28" ~ "Depression",
                                                                 Sample == "F29" ~ "Control",
                                                                 Sample == "F30" ~ "Control",
                                                                 Sample == "F31" ~ "Control",
                                                                 Sample == "F32" ~ "Control",
                                                                 Sample == "F33" ~ "Control",
                                                                 Sample == "F34" ~ "Control",
                                                                 Sample == "F35" ~ "Control",
                                                                 Sample == "F36" ~ "Control",
                                                                 Sample == "F37" ~ "Control",
                                                                 Sample == "F38" ~ "Control"))
metadata_MDD <- column_to_rownames(metadata_MDD, var = "Full_name")
metadata_MDD <- metadata_MDD[colnames(MDD_data),]
metadata_MDD_f <- metadata_MDD %>% filter(Sample %in% unique(grep("F", metadata_MDD$Sample, value = T)))
Diagnosis <- metadata_MDD_f$Diagnosis
names(Diagnosis) <- rownames(metadata_MDD_f)
MDD_female$Diagnosis <- Diagnosis
```

```{r}
saveRDS(MDD_female, file = "Extra_data/Validation_Seurat_MDD_fem.rds")
MDD_female <- readRDS("Extra_data/Validation_Seurat_MDD_fem.rds")
```

## Get differentially expressed genes

In microglia, MDD vs control

```{r}
MDD_female_Mic <- subset(MDD_female, subset = Celltype == "Mic")
```

Get regulons of interest

```{r}
edgelist_MDD <- read.table("single-cell/edgelist_sc_MDD.txt", header = T)
edgelist_MDD_MG <- edgelist_MDD %>% filter(regulator %in% c("IKZF1", "IRF8", "RUNX1", "TAL1", "SPI1")) # 791 interactions 
edgelist_MDD_MG %>% group_by(regulator) %>% summarise(n = n())
```

```{r}
Idents(MDD_female_Mic) <- "Diagnosis"
Markers_Mic <- FindMarkers(MDD_female_Mic, ident.1 = "Depression", ident.2 = "Control")
Markers_Mic_sig <- Markers_Mic %>% filter(p_val_adj <= 0.05)
Markers_Mic_sig # 175 genes 
```

Search for overlap with regulon genes

```{r}
overlap <- Markers_Mic_sig %>% filter(rownames(Markers_Mic_sig) %in% edgelist_MDD_MG$gene) # 14 genes 
print(rownames(overlap), quote = F) 
edgelist_MDD_MG %>% filter(gene %in% rownames(overlap))
```

11 targets of IKZF1, 8 targets of IRF8, 10 targets of RUNX1, 3 targets of SPI1 and 5 targets of TAL1 More with original cell type labels

## Volcano plot of DEGs 
```{r}
Markers_Mic <- Markers_Mic %>% mutate(gene = rownames(Markers_Mic))
Markers_Mic <- Markers_Mic %>%
  mutate(gene_type = case_when(avg_log2FC >= 0.5 & p_val_adj <= 0.05 ~ "up",
                               avg_log2FC <= -0.5 & p_val_adj <= 0.05 ~ "down",
                               TRUE ~ "ns"))   
Markers_Mic %>%
  count(gene_type)

cols <- c("up" = "#FFAABB", "down" = "#99DDFF", "ns" = "grey") 
sizes <- c("up" = 2, "down" = 2, "ns" = 1) 
```

```{r}
library(ggrepel)
p <- ggplot(Markers_Mic, aes(x = avg_log2FC, y = -log10(p_val_adj), fill = gene_type,
                             size = gene_type)) + 
  geom_vline(xintercept = c(-0.5, 0.5), linetype = "dashed") + 
  geom_hline(yintercept = -log10(0.05), linetype = "dashed") + 
  geom_point() + 
  geom_point(shape = 21, colour = "black") + 
  scale_fill_manual(values = cols) + 
  scale_size_manual(values = sizes) +
  labs(x = "log2FC", y = "-log10(p adjusted)") + 
  ggtitle("Microglia MDD vs Control") +
  xlim(-1.3, 1.3)  +
  geom_label_repel(data = Markers_Mic %>% filter(p_val_adj <= 0.05) %>% 
                     filter(gene %in% edgelist_MDD_MG$gene), 
                   aes(label = gene), 
                   box.padding = 0.5, point.padding = 0.5, segment.color = "grey50", 
                   segment.size = 0.2, segment.alpha = 0.5, size = 3, max.overlaps = Inf) + 
  theme_bw() +
  theme(panel.border = element_rect(colour = "black", fill = NA, size= 0.5),    
        panel.grid.minor = element_blank(),
        panel.grid.major = element_blank(),
        legend.position = "none",
        title = element_text(size = 20),
        axis.text.x = element_text(size = 18),
        axis.text.y = element_text(size = 18),
        axis.title.x = element_text(size = 20),
        axis.title.y = element_text(size = 20))
p
ggsave("Extra_data/Microglia_MDD_vs_Control.pdf", p, width = 8, height = 6, device = "pdf")
```
